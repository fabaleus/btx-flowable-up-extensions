#################################
# Management server configuration
#################################

# Server properties.
# The port where management endpoints are exposed.
management.server.port=8081

# Info properties.
# NOTE: In this section, property names correspond to JSON object keys. So, keep them in camel-case.
# The name of the application.
info.app.name=spring-reactive
# The version of the application.
info.app.version=0.0.17
info.app.commit=@git.commit.id.abbrev@
# The date and time when the application was last built.
info.app.buildTimestamp=@timestamp@

###########################
# Application configuration
###########################

# Server properties.
# The port where the embedded server listens to.
# Default value: 8080.
server.port=8080

# Logging
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS Z}){faint} [%X{sessionId}/%X{requestId}] %clr(%5level) %clr(---){faint} [%15.15thread] %cyan(%-40.40class{40}:%-4.4line) %clr(:){faint} %msg%n%xEx

# Tracing
# Disable google cloud trace by default
spring.cloud.gcp.trace.enabled=false

# Documentation
springdoc.api-docs.version=openapi_3_1

# Authentication
# Not specifying property up.security.jwt.issuers will disable authentication entirely
#up.security.jwt.issuers={'https://iam.test.unifiedpost.com/auth/realms/test-btx-sso', 'https://iam.test.unifiedpost.com/auth/realms/test-btx-authz'}

# Authorization
# See https://bitbucket.org/unifiedpost/btx_shared_libraries/src/master/btx-shared-authorization/
#up.security.uma.audience=uma-authz
#up.security.uma.http.url=https://iam.test.unifiedpost.com/auth/realms/test-btx-authz

# Monitoring
# optional prefix setting (default is `service`), set to `false` to disable
#up.prometheus.metrics.prefix=service

# flowable settings
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/flowable
spring.datasource.username=flowable
spring.datasource.password=flowable

flowable.design.license-location=file:${user.home}/.flowable/flowable.license

flowable.design.model-locking.enabled=true
flowable.design.model-locking.auto-lock-on-create=true

flowable.design.deployment-api-url=https://flowable-work.flowable.prod.fabaleus.com/app-api
flowable.design.undeployment-api-url=https://flowable-work.flowable.prod.fabaleus.com/platform-api/app-deployments
flowable.design.remote.authentication.type=oauth2
flowable.design.remote.authentication.user=work-access
flowable.design.remote.authentication.password=''
flowable.design.remote.idm-url=https://flowable-work.flowable.prod.fabaleus.com
flowable.design.security.oauth2.admin-authorities=flowable-design-admin
flowable.design.security.oauth2.authorities-attributes=roles
flowable.design.security.oauth2.post-logout-redirect-url=https://flowable-work.flowable.prod.fabaleus.com
application.design.security.type=oauth2
application.security.type: oauth2

server.forward-headers-strategy=NATIVE
server.servlet.context-path=/
spring.security.oauth2.client.provider.flowable-design.issuer-uri=https://iam.devel.unifiedpost.com/auth/realms/devel-flowable
spring.security.oauth2.client.provider.flowable-design.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.work-access.token-uri=https://iam.devel.unifiedpost.com/auth/realms/devel-flowable/protocol/openid-connect/token
spring.security.oauth2.client.provider.work-access.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.flowable-design.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.flowable-design.client-id=flowable-design
spring.security.oauth2.client.registration.flowable-design.client-name=Keycloak Design
spring.security.oauth2.client.registration.flowable-design.client-secret=taiPaumeUYxQjwpYMFwvuY6scnFV0PEb
spring.security.oauth2.client.registration.flowable-design.scope=openid,profile
spring.security.oauth2.client.registration.work-access.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.work-access.client-id=flowable-design
spring.security.oauth2.client.registration.work-access.client-name=Work Access
spring.security.oauth2.client.registration.work-access.client-secret=taiPaumeUYxQjwpYMFwvuY6scnFV0PEb
spring.security.oauth2.client.registration.work-access.scope=openid
flowable.design.use-basic-user-store=false
logging.level.org.flowable=INFO

flowable.design.security.oauth2.tenant-attribute=

